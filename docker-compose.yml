services:
  database:
    image: postgres:15
    container_name: secunda_test_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  api:
    build: .
    container_name: secunda_test_app
    command: uvicorn src.app.main:app --host 0.0.0.0 --port 8000
    environment:
      PG_DSN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - database
    volumes:
      - ./src:/app/src
      - ./alembic:/app/alembic
    networks:
      - app-network
  
  migrations:
    build: .
    container_name: alembic_migrations
    command: sh -c "alembic upgrade head"
    environment:
      PG_DSN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
    
  init_data:
    build: .
    container_name: init_data_script
    command: python /app/load_data.py
    environment:
      PG_DSN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}
    env_file:
      - .env
    depends_on:
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./init-data.sql:/app/init-data.sql
      - ./load_data.py:/app/load_data.py
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge